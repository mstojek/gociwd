{
  "__inputs": [
    {
      "name": "DS_INFLUXDB-FLUX",
      "label": "InfluxDB-Flux",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.4.7"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Inspired by the Openwrt dashboard and original Collectd Graph Panel (PHP frontend), but then as a Dashboard in Grafana with InfluxDB as a data source. Similar colors and styling. Currently supported graphs: - Load - CPU - Memory - Interface Traffic (Original: https://collectd.org/wiki/index.php/Collectd_Graph_Panel)",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": 10179,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 30,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/midterm/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "5m"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/longterm/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "15m"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/shortterm/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "1m"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 259,
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Mean",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "alias": "Used",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "memory_value",
          "orderByTime": "ASC",
          "policy": "$rp",
          "query": "from(bucket: \"${dynamicbucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"load_longterm\")\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\n  |> filter(fn: (r) => r[\"host\"] == \"${hostname}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)\n  |> yield(name: \"longterm\")\n\nfrom(bucket: \"${dynamicbucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"load_midterm\")\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\n  |> filter(fn: (r) => r[\"host\"] == \"${hostname}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"midterm\")\n\nfrom(bucket: \"${dynamicbucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"load_shortterm\")\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\n  |> filter(fn: (r) => r[\"host\"] == \"${hostname}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"shortterm\")",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "type_instance",
              "operator": "=",
              "value": "used"
            }
          ]
        }
      ],
      "title": "System Load on $hostname",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 30,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/type_instance=\"buffered\"/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ffb000",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Buffered"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/type_instance=\"cached\"/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#0000ff",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Cached"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/type_instance=\"slab_recl\"/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ff77ff",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Slab Recl"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/type_instance=\"slab_unrecl\"/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ff00ff",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Slab Unrecl"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/type_instance=\"used\"/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ff0000",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Used"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/type_instance=\"free\"/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#00e000",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Free"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 149,
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Mean",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "alias": "Used",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "memory_value",
          "orderByTime": "ASC",
          "policy": "$rp",
          "query": "from(bucket: \"${dynamicbucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"memory_value\")\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\n  |> filter(fn: (r) => r[\"host\"] == \"${hostname}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: false)\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "type_instance",
              "operator": "=",
              "value": "used"
            }
          ]
        }
      ],
      "title": "Memory Usage on $hostname",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "displayName": "${__field.labels.type_instance}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "id": 242,
      "maxPerRow": 2,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "repeat": "cpuid",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cpu_value\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}\")\r\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> filter(fn: (r) => r[\"instance\"] =~ /^${cpuid}$/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)",
          "refId": "A"
        }
      ],
      "title": "CPU Usage on $hostname on CPU ${cpuid}",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/interface_rx.*/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Receive"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/interface_tx.*/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Transmit"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 6,
        "x": 0,
        "y": 17
      },
      "id": 49,
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.7",
      "repeat": "interface",
      "repeatDirection": "h",
      "targets": [
        {
          "alias": "Receive",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "interface_rx",
          "orderByTime": "ASC",
          "policy": "$rp",
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"type\"] == \"if_octets\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"instance\"] =~ /^${interface}$/)\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface_tx\")\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}_rate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "10s"
                ],
                "type": "non_negative_derivative"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "type",
              "operator": "=",
              "value": "if_octets"
            },
            {
              "condition": "AND",
              "key": "instance",
              "operator": "=~",
              "value": "/^$interface$/"
            }
          ]
        },
        {
          "alias": "Transmit",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "interface_tx",
          "orderByTime": "ASC",
          "policy": "$rp",
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"type\"] == \"if_octets\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface_rx\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> filter(fn: (r) => r[\"instance\"] =~ /^${interface}$/)\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}_rate\")\r\n  //|> set(key: \"_field\", value: \"Receive\")",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "10s"
                ],
                "type": "non_negative_derivative"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "type",
              "operator": "=",
              "value": "if_octets"
            },
            {
              "condition": "AND",
              "key": "instance",
              "operator": "=~",
              "value": "/^$interface$/"
            }
          ]
        }
      ],
      "title": "Interface Traffic ($interface) on $hostname",
      "transformations": [
        {
          "id": "organize",
          "options": {}
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false,
            "minWidth": 100
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Bytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "instance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Interface"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 6,
        "x": 6,
        "y": 44
      },
      "id": 28,
      "options": {
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Interface"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${dynamicbucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface_tx\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\n  |> filter(fn: (r) => r[\"instance\"] =~ /^${interface:regex}$/)\n  |> filter(fn: (r) => r[\"aggregate\"] == \"increase\")\n  |> filter(fn: (r) => r[\"type\"] == \"if_octets\")\n  |> sum()\n  |> keep(columns: [\"instance\", \"_value\"])\n  |> group()\n  \n  |> yield(name: \"sum\")",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "TX Total on $hostname",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "instance": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false,
            "minWidth": 100
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Bytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "instance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Interface"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 6,
        "x": 12,
        "y": 44
      },
      "id": 67,
      "options": {
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Interface"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${dynamicbucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface_rx\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\n  |> filter(fn: (r) => r[\"instance\"] =~ /^${interface:regex}$/)\n  |> filter(fn: (r) => r[\"type\"] == \"if_octets\")\n  |> filter(fn: (r) => r[\"aggregate\"] == \"increase\")\n  |> sum()\n  |> keep(columns: [\"instance\", \"_value\"])\n  |> group()\n  |> yield(name: \"sum\")",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "RX Total on $hostname",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "instance": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.type_instance}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 17,
        "x": 0,
        "y": 53
      },
      "id": 80,
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Mean",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.4.7",
      "repeatDirection": "v",
      "targets": [
        {
          "alias": "Receive",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "interface_rx",
          "orderByTime": "ASC",
          "policy": "$rp",
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"iptables_value\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}_rate\")\r\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> filter(fn: (r) => r[\"instance\"] == \"mangle-iptmon_tx\")\r\n  |> filter(fn: (r) => r[\"type_instance\"] =~ /^tx_${client:regex}$/)\r\n  |> filter(fn: (r) => r[\"type\"] == \"ipt_bytes\")\r\n  //|> fill(value: 0.0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "10s"
                ],
                "type": "non_negative_derivative"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "type",
              "operator": "=",
              "value": "if_octets"
            },
            {
              "condition": "AND",
              "key": "instance",
              "operator": "=~",
              "value": "/^$interface$/"
            }
          ]
        }
      ],
      "title": "TX client Traffic on $hostname",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Bytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "type_instance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Client"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 5,
        "x": 17,
        "y": 53
      },
      "id": 283,
      "options": {
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Bytes"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${dynamicbucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"iptables_value\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"aggregate\"] == \"increase\")\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\n  |> filter(fn: (r) => r[\"instance\"] == \"mangle-iptmon_tx\")\n  |> filter(fn: (r) => r[\"type_instance\"] =~ /^tx_${client:regex}$/)\n  |> filter(fn: (r) => r[\"type\"] == \"ipt_bytes\")\n  |> sum()\n  |> keep(columns: [\"type_instance\",\"_value\"])  \n  |> group()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "TX Total on $hostname",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "type_instance": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.type_instance}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 17,
        "x": 0,
        "y": 65
      },
      "id": 93,
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Mean",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.4.7",
      "repeatDirection": "v",
      "targets": [
        {
          "alias": "Transmit",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "interface_tx",
          "orderByTime": "ASC",
          "policy": "$rp",
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"iptables_value\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}_rate\")\r\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> filter(fn: (r) => r[\"instance\"] == \"mangle-iptmon_rx\")\r\n  |> filter(fn: (r) => r[\"type_instance\"] =~ /^rx_${client:regex}$/)\r\n  |> filter(fn: (r) => r[\"type\"] == \"ipt_bytes\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)\r\n",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "10s"
                ],
                "type": "non_negative_derivative"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "type",
              "operator": "=",
              "value": "if_octets"
            },
            {
              "condition": "AND",
              "key": "instance",
              "operator": "=~",
              "value": "/^$interface$/"
            }
          ]
        }
      ],
      "title": "RX client Traffic on $hostname",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Bytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "type_instance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Client"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 5,
        "x": 17,
        "y": 65
      },
      "id": 119,
      "options": {
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Bytes"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${dynamicbucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"iptables_value\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"aggregate\"] == \"increase\")\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\n  |> filter(fn: (r) => r[\"instance\"] == \"mangle-iptmon_rx\")\n  |> filter(fn: (r) => r[\"type_instance\"] =~ /^rx_${client:regex}$/)\n  |> filter(fn: (r) => r[\"type\"] == \"ipt_bytes\")\n  |> sum()\n  |> keep(columns: [\"type_instance\",\"_value\"])  \n  |> group()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "RX Total on $hostname",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "type_instance": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.type_instance}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 17,
        "x": 0,
        "y": 77
      },
      "id": 282,
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Mean",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.4.7",
      "repeatDirection": "v",
      "targets": [
        {
          "alias": "Receive",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "interface_rx",
          "orderByTime": "ASC",
          "policy": "$rp",
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"iptables_value\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}_rate\")\r\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> filter(fn: (r) => r[\"instance\"] == \"mangle-nlbwmon_tx\")\r\n  |> filter(fn: (r) => r[\"type_instance\"] =~ /^tx_${client:regex}$/)\r\n  |> filter(fn: (r) => r[\"type\"] == \"ipt_bytes\")\r\n  //|> fill(value: 0.0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "10s"
                ],
                "type": "non_negative_derivative"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "type",
              "operator": "=",
              "value": "if_octets"
            },
            {
              "condition": "AND",
              "key": "instance",
              "operator": "=~",
              "value": "/^$interface$/"
            }
          ]
        }
      ],
      "title": "TX client Traffic on $hostname (Nlbwmon)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Bytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "type_instance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Client"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 5,
        "x": 17,
        "y": 77
      },
      "id": 106,
      "options": {
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Bytes"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${dynamicbucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"iptables_value\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"aggregate\"] == \"increase\")\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\n  |> filter(fn: (r) => r[\"instance\"] == \"mangle-nlbwmon_tx\")\n  |> filter(fn: (r) => r[\"type_instance\"] =~ /^tx_${client:regex}$/)\n  |> filter(fn: (r) => r[\"type\"] == \"ipt_bytes\")\n  |> sum()\n  |> keep(columns: [\"type_instance\",\"_value\"])  \n  |> group()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "TX Total on $hostname (Nlbwmon)",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "type_instance": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.type_instance}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 17,
        "x": 0,
        "y": 89
      },
      "id": 295,
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Mean",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.4.7",
      "repeatDirection": "v",
      "targets": [
        {
          "alias": "Receive",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "interface_rx",
          "orderByTime": "ASC",
          "policy": "$rp",
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"iptables_value\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}_rate\")\r\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> filter(fn: (r) => r[\"instance\"] == \"mangle-nlbwmon_rx\")\r\n  |> filter(fn: (r) => r[\"type_instance\"] =~ /^rx_${client:regex}$/)\r\n  |> filter(fn: (r) => r[\"type\"] == \"ipt_bytes\")\r\n  //|> fill(value: 0.0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "10s"
                ],
                "type": "non_negative_derivative"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "type",
              "operator": "=",
              "value": "if_octets"
            },
            {
              "condition": "AND",
              "key": "instance",
              "operator": "=~",
              "value": "/^$interface$/"
            }
          ]
        }
      ],
      "title": "RX client Traffic on $hostname (Nlbwmon)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Bytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "type_instance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Client"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 5,
        "x": 17,
        "y": 89
      },
      "id": 296,
      "options": {
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Bytes"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${dynamicbucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"iptables_value\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"aggregate\"] == \"increase\")\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\n  |> filter(fn: (r) => r[\"instance\"] == \"mangle-nlbwmon_rx\")\n  |> filter(fn: (r) => r[\"type_instance\"] =~ /^rx_${client:regex}$/)\n  |> filter(fn: (r) => r[\"type\"] == \"ipt_bytes\")\n  |> sum()\n  |> keep(columns: [\"type_instance\",\"_value\"])  \n  |> group()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "RX Total on $hostname (Nlbwmon)",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "type_instance": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.instance}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 0,
        "y": 101
      },
      "id": 270,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"iwinfo_value\")\r\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}\")\r\n  |> filter(fn: (r) => r[\"instance\"] =~ /^${wifi_if:regex}$/) \r\n  |> filter(fn: (r) => r[\"type\"] == \"bitrate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Wifi Data rate on $hostname",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 1,
          "displayName": "${__field.labels.instance}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 11,
        "y": 101
      },
      "id": 167,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"iwinfo_value\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}\")\r\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> filter(fn: (r) => r[\"instance\"] =~ /^${wifi_if:regex}$/) \r\n  |> filter(fn: (r) => r[\"type\"] == \"stations\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Wifi Clients on $hostname",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.host}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 109
      },
      "id": 196,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"conntrack_value\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> filter(fn: (r) => r[\"type\"] == \"conntrack\")\r\n  |> filter(fn: (r) => r[\"type_instance\"] != \"max\")\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)",
          "refId": "A"
        }
      ],
      "title": "Connections on $hostname",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "displayName": "${__field.labels.type_instance}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 6,
        "y": 109
      },
      "id": 225,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"dns_value\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}_rate\")\r\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)\r\n",
          "refId": "A"
        }
      ],
      "title": "DNS requests/sec on $hostname",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB-FLUX}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "displayName": "${__field.labels.type}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 7,
        "x": 15,
        "y": 109
      },
      "id": 306,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB-FLUX}"
          },
          "query": "from(bucket: \"${dynamicbucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"dhcpleases_value\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"aggregate\"] == \"${agg}\")\r\n  |> filter(fn: (r) => r[\"bucket\"] == \"collectd\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${hostname}$/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: ${agg}, createEmpty: true)\r\n",
          "refId": "A"
        }
      ],
      "title": "DHCP leases on $hostname",
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "revision": 1,
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-FLUX}"
        },
        "definition": "import \"influxdata/influxdb/schema\"\n \nschema.tagValues(\n  bucket: \"${dynamicbucket}\",\n  tag: \"host\",\n  predicate: (r) => r[\"_field\"] == \"value\",\n  start: v.timeRangeStart, \n  stop: v.timeRangeStop\n)",
        "hide": 0,
        "includeAll": false,
        "label": "Hostname",
        "multi": false,
        "name": "hostname",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\n \nschema.tagValues(\n  bucket: \"${dynamicbucket}\",\n  tag: \"host\",\n  predicate: (r) => r[\"_field\"] == \"value\",\n  start: v.timeRangeStart, \n  stop: v.timeRangeStop\n)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-FLUX}"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n \r\nschema.tagValues(\r\n  bucket: \"${dynamicbucket}\",\r\n  tag: \"type_instance\",\r\n  predicate: (r) => r[\"_measurement\"] == \"iptables_value\",\r\n  start: v.timeRangeStart, \r\n  stop: v.timeRangeStop\r\n)",
        "hide": 0,
        "includeAll": true,
        "label": "Client",
        "multi": true,
        "name": "client",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n \r\nschema.tagValues(\r\n  bucket: \"${dynamicbucket}\",\r\n  tag: \"type_instance\",\r\n  predicate: (r) => r[\"_measurement\"] == \"iptables_value\",\r\n  start: v.timeRangeStart, \r\n  stop: v.timeRangeStop\r\n)",
        "refresh": 2,
        "regex": "/(?:tx|rx)_([a-zA-Z0-9.-]+)/",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": "",
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-FLUX}"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n \r\nschema.tagValues(\r\n  bucket: \"${dynamicbucket}\",\r\n  tag: \"instance\",\r\n  predicate: (r) => r[\"_measurement\"] == \"interface_rx\" and r[\"host\"] =~ /^$hostname$/ and r[\"aggregate\"] == \"${agg}\",\r\n  start: v.timeRangeStart, \r\n  stop: v.timeRangeStop\r\n)",
        "hide": 0,
        "includeAll": true,
        "label": "Interface",
        "multi": true,
        "name": "interface",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n \r\nschema.tagValues(\r\n  bucket: \"${dynamicbucket}\",\r\n  tag: \"instance\",\r\n  predicate: (r) => r[\"_measurement\"] == \"interface_rx\" and r[\"host\"] =~ /^$hostname$/ and r[\"aggregate\"] == \"${agg}\",\r\n  start: v.timeRangeStart, \r\n  stop: v.timeRangeStop\r\n)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-FLUX}"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n \r\nschema.tagValues(\r\n  bucket: \"${dynamicbucket}\",\r\n  tag: \"instance\",\r\n  predicate: (r) => r[\"_measurement\"] == \"iwinfo_value\" and r[\"host\"] =~ /^$hostname$/ and r[\"aggregate\"] == \"${agg}\",\r\n  start: v.timeRangeStart, \r\n  stop: v.timeRangeStop\r\n)",
        "hide": 0,
        "includeAll": true,
        "label": "Wi-Fi Interface",
        "multi": true,
        "name": "wifi_if",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n \r\nschema.tagValues(\r\n  bucket: \"${dynamicbucket}\",\r\n  tag: \"instance\",\r\n  predicate: (r) => r[\"_measurement\"] == \"iwinfo_value\" and r[\"host\"] =~ /^$hostname$/ and r[\"aggregate\"] == \"${agg}\",\r\n  start: v.timeRangeStart, \r\n  stop: v.timeRangeStop\r\n)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "max",
          "value": "max"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Aggregation Type",
        "multi": false,
        "name": "agg",
        "options": [
          {
            "selected": true,
            "text": "max",
            "value": "max"
          },
          {
            "selected": false,
            "text": "mean",
            "value": "mean"
          },
          {
            "selected": false,
            "text": "min",
            "value": "min"
          }
        ],
        "query": "max, mean, min",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-FLUX}"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n \r\nschema.tagValues(\r\n  bucket: \"${dynamicbucket}\",\r\n  tag: \"instance\",\r\n  predicate: (r) => r[\"_measurement\"] == \"cpu_value\" and r[\"host\"] =~ /^$hostname$/ and r[\"aggregate\"] == \"${agg}\",\r\n  start: v.timeRangeStart, \r\n  stop: v.timeRangeStop\r\n)",
        "hide": 2,
        "includeAll": true,
        "multi": false,
        "name": "cpuid",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n \r\nschema.tagValues(\r\n  bucket: \"${dynamicbucket}\",\r\n  tag: \"instance\",\r\n  predicate: (r) => r[\"_measurement\"] == \"cpu_value\" and r[\"host\"] =~ /^$hostname$/ and r[\"aggregate\"] == \"${agg}\",\r\n  start: v.timeRangeStart, \r\n  stop: v.timeRangeStop\r\n)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 3,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-FLUX}"
        },
        "definition": "//Bucketfilter to filter only buckets beginning with name telegraf..\r\nbucketfilter = /collectd\\/[^af].*/\r\n\r\nbuckets()\r\n  |> filter(fn: (r) => r.name =~ bucketfilter)\r\n  //convert retentionperiod from nanosecond to days\r\n  |> map(fn: (r) => ({r with \r\n    retentionPeriodinDays: r.retentionPeriod / 86400000000000}) \r\n  )\r\n  //replace retentionpolicy infinity with a high number in NS\r\n  |> map(fn: (r) => ({r with\r\n    retentionPeriod: if r.retentionPeriod == 0 then 999999999999999999\r\n    else r.retentionPeriod})\r\n  )\r\n  //calculate the duration from \"to\" and \"from\" timespan and convert it to nanosecond\r\n  |> map(fn: (r) => ({r with \r\n    DashboardDurationinNS: (${__to} - ${__from}) * 1000000})\r\n  )\r\n  |> filter(fn: (r) => \r\n    r.DashboardDurationinNS <= r.retentionPeriod and\r\n    r.retentionPeriod >= uint(v: now()) - uint(v: ${__from} * 1000000)\r\n  )\r\n  |> sort(columns: [\"retentionPeriod\"], desc: false)\r\n  |> limit(n: 1)\r\n  |> keep(columns: [\"name\"]) //remove all fields except for \"name\"",
        "hide": 0,
        "includeAll": false,
        "label": "Retention Policy",
        "multi": false,
        "name": "dynamicbucket",
        "options": [],
        "query": "//Bucketfilter to filter only buckets beginning with name telegraf..\r\nbucketfilter = /collectd\\/[^af].*/\r\n\r\nbuckets()\r\n  |> filter(fn: (r) => r.name =~ bucketfilter)\r\n  //convert retentionperiod from nanosecond to days\r\n  |> map(fn: (r) => ({r with \r\n    retentionPeriodinDays: r.retentionPeriod / 86400000000000}) \r\n  )\r\n  //replace retentionpolicy infinity with a high number in NS\r\n  |> map(fn: (r) => ({r with\r\n    retentionPeriod: if r.retentionPeriod == 0 then 999999999999999999\r\n    else r.retentionPeriod})\r\n  )\r\n  //calculate the duration from \"to\" and \"from\" timespan and convert it to nanosecond\r\n  |> map(fn: (r) => ({r with \r\n    DashboardDurationinNS: (${__to} - ${__from}) * 1000000})\r\n  )\r\n  |> filter(fn: (r) => \r\n    r.DashboardDurationinNS <= r.retentionPeriod and\r\n    r.retentionPeriod >= uint(v: now()) - uint(v: ${__from} * 1000000)\r\n  )\r\n  |> sort(columns: [\"retentionPeriod\"], desc: false)\r\n  |> limit(n: 1)\r\n  |> keep(columns: [\"name\"]) //remove all fields except for \"name\"",
        "refresh": 2,
        "regex": "(?<value>(collectd\\/(?<text>.*)))",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB-FLUX}"
        },
        "definition": "//Bucketfilter to filter only buckets beginning with name telegraf..\r\nbucketfilter = /collectd\\/[^af].*/\r\n\r\nbuckets()\r\n  |> filter(fn: (r) => r.name == \"${dynamicbucket}\")\r\n  //convert retentionperiod from nanosecond to days\r\n  |> map(fn: (r) => ({r with \r\n    retentionPeriodinSeconds: r.retentionPeriod /1000 }) \r\n  )\r\n    |> map(fn: (r) => ({r with \r\n    retentionPeriodString: string(v: duration(v: uint(v: r.retentionPeriodinSeconds)))})\r\n  )\r\n    |> keep(columns: [\"retentionPeriodString\"]) //remove all fields except for \"name\"",
        "hide": 2,
        "includeAll": false,
        "label": "connectNullValuesThreshold",
        "multi": false,
        "name": "cNVThreshold",
        "options": [],
        "query": "//Bucketfilter to filter only buckets beginning with name telegraf..\r\nbucketfilter = /collectd\\/[^af].*/\r\n\r\nbuckets()\r\n  |> filter(fn: (r) => r.name == \"${dynamicbucket}\")\r\n  //convert retentionperiod from nanosecond to days\r\n  |> map(fn: (r) => ({r with \r\n    retentionPeriodinSeconds: r.retentionPeriod /1000 }) \r\n  )\r\n    |> map(fn: (r) => ({r with \r\n    retentionPeriodString: string(v: duration(v: uint(v: r.retentionPeriodinSeconds)))})\r\n  )\r\n    |> keep(columns: [\"retentionPeriodString\"]) //remove all fields except for \"name\"",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-1y",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Openwrt Collectd Graph Panel (Flux)",
  "uid": "GGE4mcQ4z",
  "version": 75,
  "weekStart": ""
}